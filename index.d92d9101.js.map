{"mappings":"ICoBQ,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CAjBR,SAAS,IACP,I,EAMA,MAFa,AAJK,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAgB,GAAG,CAChE,SAAC,CADH,EACU,OAAA,EAAG,WAAW,A,GAGA,GAAG,CAAC,SAAC,CAA7B,EAAoC,OAAA,SAAS,EAAG,OAAO,CAAC,KAAM,IAAK,G,EAGrE,CAcA,SAAS,aAAa,CAAC,uBAAuB,WAAW,CACvD,AAJO,CAAA,CAFD,EAAa,KAED,MAAM,CAAC,SAAC,CAAA,CAAK,CAA/B,EAAqC,OAAA,EAAM,CAAG,EAAA,GAAK,EAAW,MAAM,AAAN,EAIvC,cAAc,CAAC,SAExC,SAAS,aAAa,CAAC,qBAAqB,WAAW,CACrD,AAbO,AAFY,IAED,MAAM,CAAC,SAAC,CAAA,CAAK,CAA/B,EAAqC,OAAA,EAAM,CAAG,EAAA,GAazB,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write your code here\nfunction getPopulation() {\n    var population = _to_consumable_array(document.querySelectorAll(\".population\")).map(function(el) {\n        return el.textContent;\n    });\n    population = population.map(function(el) {\n        return parseInt(el.replace(/,/g, \"\"), 10);\n    });\n    return population;\n}\nfunction getTotalPopulation() {\n    var population = getPopulation();\n    return population.reduce(function(sum, x) {\n        return sum + x;\n    }, 0);\n}\nfunction getAveragePopulation() {\n    var population = getPopulation();\n    return population.reduce(function(sum, x) {\n        return sum + x;\n    }, 0) / population.length;\n}\ndocument.querySelector(\".average-population\").textContent = getAveragePopulation().toLocaleString(\"en-US\");\ndocument.querySelector(\".total-population\").textContent = getTotalPopulation().toLocaleString(\"en-US\");\n\n//# sourceMappingURL=index.d92d9101.js.map\n","'use strict';\n\n// write your code here\nfunction getPopulation() {\n  let population = [...document.querySelectorAll('.population')].map(\n    (el) => el.textContent,\n  );\n\n  population = population.map((el) => parseInt(el.replace(/,/g, ''), 10));\n\n  return population;\n}\n\nfunction getTotalPopulation() {\n  const population = getPopulation();\n\n  return population.reduce((sum, x) => sum + x, 0);\n}\n\nfunction getAveragePopulation() {\n  const population = getPopulation();\n\n  return population.reduce((sum, x) => sum + x, 0) / population.length;\n}\n\ndocument.querySelector('.average-population').textContent =\n  getAveragePopulation().toLocaleString('en-US');\n\ndocument.querySelector('.total-population').textContent =\n  getTotalPopulation().toLocaleString('en-US');\n"],"names":["population","_array_like_to_array","arr","len","length","i","arr2","Array","getPopulation","_to_consumable_array","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","el","textContent","parseInt","replace","querySelector","getAveragePopulation","reduce","sum","x","toLocaleString","getTotalPopulation"],"version":3,"file":"index.d92d9101.js.map"}